{"version":3,"sources":["components/login/LoginScreen.js","data/heroes.js","components/heroes/HeroCard.js","components/heroes/HeroList.js","selectors/getHeroesByPublisher.js","components/dc/DcScreen.js","components/heroes/HeroScreen.js","selectors/getHeroById.js","components/marvel/MarvelScreen.js","components/search/SearchScreen.js","hooks/useForm.js","selectors/getHeroesByName.js","components/ui/Navbar.js","routers/DashboardRouters.js","routers/AppRouter.js","HeroesApp.js","index.js"],"names":["LoginScreen","history","className","onClick","replace","heroes","HeroCard","id","superhero","alter_ego","first_appearance","characters","style","maxWidth","src","alt","to","HeroList","publisher","useMemo","includes","Error","filter","hero","getHeroesByPublisher","map","key","DcScreen","HeroScreen","heroeId","useParams","find","length","push","goBack","MarvelScreen","SearchScreen","location","useLocation","queryString","parse","search","q","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","useForm","searchText","formValues","heroesFiltered","toLocaleLowerCase","getHeroesByName","onSubmit","e","preventDefault","type","placeholder","autoComplete","onChange","Navbar","activeClassName","exact","DashboardRouters","path","component","AppRouter","HeroesApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb599ba1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const LoginScreen = ({history}) => {\r\n    const handleLogin = ()=>{\r\n        //history.push('/');\r\n        history.replace('/');\r\n    }\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1>Login</h1>\r\n            <hr />\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                onClick={handleLogin}\r\n            >\r\n                Login\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const heroes = [\r\n    {\r\n        'id': 'dc-batman',\r\n        'superhero':'Batman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Bruce Wayne',\r\n        'first_appearance':'Detective Comics #27',\r\n        'characters':'Bruce Wayne'\r\n    },\r\n    {\r\n        'id': 'dc-superman',\r\n        'superhero':'Superman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Kal-El',\r\n        'first_appearance':'Action Comics #1',\r\n        'characters':'Kal-El'\r\n    },\r\n    {\r\n        'id': 'dc-flash',\r\n        'superhero':'Flash', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Jay Garrick',\r\n        'first_appearance':'Flash Comics #1',\r\n        'characters':'Jay Garrick, Barry Allen, Wally West, Bart Allen'\r\n    },\r\n    {\r\n        'id': 'dc-green',\r\n        'superhero':'Green Lantern', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Alan Scott',\r\n        'first_appearance':'All-American Comics #16',\r\n        'characters':'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\r\n    },\r\n    {\r\n        'id': 'dc-arrow',\r\n        'superhero':'Green Arrow', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Oliver Queen',\r\n        'first_appearance':'More Fun Comics #73',\r\n        'characters':'Oliver Queen'\r\n    },\r\n    {\r\n        'id': 'dc-wonder',\r\n        'superhero':'Wonder Woman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Princess Diana',\r\n        'first_appearance':'All Star Comics #8',\r\n        'characters':'Princess Diana'\r\n    },\r\n    {\r\n        'id': 'dc-martian',\r\n        'superhero':'Martian Manhunter', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'J\\'onn J\\'onzz',\r\n        'first_appearance':'Detective Comics #225',\r\n        'characters':'Martian Manhunter'\r\n    },\r\n    {\r\n        'id': 'dc-robin',\r\n        'superhero':'Robin/Nightwing', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dick Grayson',\r\n        'first_appearance':'Detective Comics #38',\r\n        'characters':'Dick Grayson'\r\n    },\r\n    {\r\n        'id': 'dc-blue',\r\n        'superhero':'Blue Beetle', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dan Garret',\r\n        'first_appearance':'Mystery Men Comics #1',\r\n        'characters':'Dan Garret, Ted Kord, Jaime Reyes'\r\n    },\r\n    {\r\n        'id': 'dc-black',\r\n        'superhero':'Black Canary', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dinah Drake',\r\n        'first_appearance':'Flash Comics #86',\r\n        'characters':'Dinah Drake, Dinah Lance'\r\n    },\r\n    {\r\n        'id': 'marvel-spider',\r\n        'superhero':'Spider Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Peter Parker',\r\n        'first_appearance':'Amazing Fantasy #15',\r\n        'characters':'Peter Parker'\r\n    },\r\n    {\r\n        'id': 'marvel-captain',\r\n        'superhero':'Captain America', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Steve Rogers',\r\n        'first_appearance':'Captain America Comics #1',\r\n        'characters':'Steve Rogers'\r\n    },\r\n    {\r\n        'id': 'marvel-iron',\r\n        'superhero':'Iron Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Tony Stark',\r\n        'first_appearance':'Tales of Suspense #39',\r\n        'characters':'Tony Stark'\r\n    },\r\n    {\r\n        'id': 'marvel-thor',\r\n        'superhero':'Thor', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Thor Odinson',\r\n        'first_appearance':'Journey into Myster #83',\r\n        'characters':'Thor Odinson'\r\n    },\r\n    {\r\n        'id': 'marvel-hulk',\r\n        'superhero':'Hulk', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Bruce Banner',\r\n        'first_appearance':'The Incredible Hulk #1',\r\n        'characters':'Bruce Banner'\r\n    },\r\n    {\r\n        'id': 'marvel-wolverine',\r\n        'superhero':'Wolverine', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'James Howlett',\r\n        'first_appearance':'The Incredible Hulk #180',\r\n        'characters':'James Howlett'\r\n    },\r\n    {\r\n        'id': 'marvel-daredevil',\r\n        'superhero':'Daredevil', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Matthew Michael Murdock',\r\n        'first_appearance':'Daredevil #1',\r\n        'characters':'Matthew Michael Murdock'\r\n    },\r\n    {\r\n        'id': 'marvel-hawkeye',\r\n        'superhero':'Hawkeye', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Clinton Francis Barton',\r\n        'first_appearance':'Tales of Suspense #57',\r\n        'characters':'Clinton Francis Barton'\r\n    },\r\n    {\r\n        'id': 'marvel-cyclops',\r\n        'superhero':'Cyclops', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Scott Summers',\r\n        'first_appearance':'X-Men #1',\r\n        'characters':'Scott Summers'\r\n    },\r\n    {\r\n        'id': 'marvel-silver',\r\n        'superhero':'Silver Surfer', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Norrin Radd',\r\n        'first_appearance':'The Fantastic Four #48',\r\n        'characters':'Norrin Radd'\r\n    }\r\n]","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const HeroCard = ({\r\n    id,\r\n    superhero, \r\n    alter_ego,\r\n    first_appearance,\r\n    characters,\r\n}) => {\r\n    return (\r\n        <div className=\"card ms-3\" style={{maxWidth:540}}>\r\n            <div className=\"row no-gutters\">\r\n                <div className=\"col-md-4\">\r\n                    <img src={`./assets/heroes/${id}.jpg`} className=\"card-img\" alt={superhero} />\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{superhero}</h5>\r\n                        <p className=\"card-text\">{alter_ego}</p>\r\n                        {\r\n                            (alter_ego !== characters)\r\n                            && <p className=\"card-text\">{characters}</p>\r\n                        }\r\n                        <p className=\"card-text\">\r\n                            <small className=\"text-muted\">{first_appearance}</small>\r\n                        </p>\r\n                        <Link to={`./hero/${id}`}>\r\n                            Más...\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo } from 'react';\r\nimport { getHeroesByPublisher } from '../../selectors/getHeroesByPublisher';\r\nimport { HeroCard } from './HeroCard';\r\n\r\nexport const HeroList = ({publisher}) => {\r\n\r\n    //const heroes = getHeroesByPublisher(publisher);\r\n    // Usando useMemo para procesos pesados\r\n    const heroes = useMemo(() => getHeroesByPublisher(publisher), [publisher])\r\n\r\n    return (\r\n        <div className=\"card-columns animate__animated animate__fadeIn\">\r\n            {\r\n                heroes.map(hero => (\r\n                    <HeroCard\r\n                        key={hero.id}\r\n                        {...hero}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { heroes } from \"../data/heroes\"\r\n\r\nexport const getHeroesByPublisher = (publisher)=>{\r\n\r\n    const validPublishers = ['DC Comics', 'Marvel Comics'];\r\n\r\n    if (!validPublishers.includes(publisher)){\r\n        throw new Error(`Publisher \"${publisher}\" no es correcto`);\r\n    }\r\n\r\n    return heroes.filter(hero => hero.publisher === publisher);\r\n}","import React from 'react';\r\nimport { HeroList } from '../heroes/HeroList';\r\n\r\nexport const DcScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>DcScreen</h1>\r\n            <hr />\r\n            <HeroList publisher=\"DC Comics\" />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo } from 'react';\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport { getHeroById } from '../../selectors/getHeroById';\r\n\r\nexport const HeroScreen = ({history}) => {\r\n\r\n    //const params = useParams();\r\n    // Desestructuramos\r\n    const {heroeId} = useParams();\r\n    //const hero = getHeroById(heroeId);\r\n    // Usando useMemo para procesos pesados\r\n    const hero = useMemo(() => getHeroById(heroeId), [heroeId])\r\n\r\n    if(!hero){\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    const handleReturn = () => {\r\n        if(history.length === 2){\r\n            history.push('/');\r\n        }else{\r\n            history.goBack();\r\n        }\r\n        history.goBack();\r\n    }\r\n\r\n    const {\r\n        superhero, \r\n        publisher,\r\n        alter_ego,\r\n        first_appearance,\r\n        characters,\r\n    } = hero;\r\n\r\n    return (\r\n        <div className=\"row mt-5\">\r\n            <div className=\"col-4\">\r\n                <img \r\n                    src={`../assets/heroes/${heroeId}.jpg`}\r\n                    alt={superhero}\r\n                    className=\"img-thumbnail animate__animated animate__fadeInLeft\"\r\n                />\r\n            </div>\r\n            <div className=\"col-8 animate__animated animate__fadeIn\">\r\n                <h3>{superhero}</h3>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\"><b>Alter ego: </b> {alter_ego} </li>\r\n                    <li className=\"list-group-item\"><b>Publisher: </b> {publisher} </li>\r\n                    <li className=\"list-group-item\"><b>First appearance: </b> {first_appearance} </li>\r\n                </ul>\r\n                <h5>characters</h5>\r\n                <p>{characters}</p>\r\n\r\n                <button \r\n                    className=\"btn btn-outline-info\"\r\n                    onClick={handleReturn}\r\n                >\r\n                    Return\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { heroes } from \"../data/heroes\"\r\n\r\nexport const getHeroById = (id)=>{\r\n\r\n    return heroes.find(hero => hero.id === id);\r\n}","import React from 'react';\r\nimport { HeroList } from '../heroes/HeroList';\r\n\r\nexport const MarvelScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>MarvelScreen</h1>\r\n            <hr />\r\n            <HeroList publisher=\"Marvel Comics\" />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo } from 'react';\r\nimport queryString from 'query-string';\r\nimport { HeroCard } from '../heroes/HeroCard';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { getHeroesByName } from '../../selectors/getHeroesByName';\r\n\r\nexport const SearchScreen = ({history}) => {\r\n\r\n    const location = useLocation();\r\n    const { q = '' } = queryString.parse(location.search);\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        searchText: q\r\n    });\r\n    const { searchText } = formValues;\r\n    const heroesFiltered = useMemo(() => getHeroesByName(q), [q]);\r\n\r\n    const handleSearch = (e) => {\r\n        e.preventDefault();\r\n        history.push(`?q=${searchText}`);\r\n        //console.log(searchText);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Search Screen</h1>\r\n            <hr />\r\n            <div className=\"row\">\r\n                <div className=\"col-5\">\r\n                    <h4>Search Form</h4>\r\n                    <hr />\r\n                    <form onSubmit={handleSearch}>\r\n                        <input \r\n                            type=\"text\"\r\n                            placeholder=\"Find your hero\"\r\n                            className=\"form-control\"\r\n                            name=\"searchText\"\r\n                            autoComplete=\"off\"\r\n                            value = {searchText}\r\n                            onChange = {handleInputChange}\r\n                        />\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn m-1 btn-block bt-outline-primary\"\r\n                        >\r\n                            Search...\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"col-7\">\r\n                    <h4>Results</h4>\r\n                    <hr />\r\n                    {\r\n                        (q === '')\r\n                            &&\r\n                            <di className=\"alert alert-info\">\r\n                                Search a hero\r\n                            </di>\r\n                    }\r\n                    {\r\n                        (q !== '' && heroesFiltered.length === 0)\r\n                            &&\r\n                            <di className=\"alert alert-danger\">\r\n                                There is no a hero with {q}\r\n                            </di>\r\n                    }\r\n                    {\r\n                        heroesFiltered.map( hero => (\r\n                            <HeroCard \r\n                                key={ hero.id }\r\n                                { ...hero }\r\n                            />\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import { heroes } from \"../data/heroes\";\r\n\r\nexport const getHeroesByName = (name = '') => {\r\n\r\n    if (name === ''){\r\n        return [];\r\n    }\r\n    \r\n    name = name.toLocaleLowerCase();\r\n    return heroes.filter(hero => hero.superhero.toLocaleLowerCase().includes(name));\r\n}","import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n            \r\n            <Link \r\n                className=\"navbar-brand\" \r\n                to=\"/\"\r\n            >\r\n                Asociaciones\r\n            </Link>\r\n\r\n            <div className=\"navbar-collapse\">\r\n                <div className=\"navbar-nav\">\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/marvel\"\r\n                    >\r\n                        Marvel\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/dc\"\r\n                    >\r\n                        DC\r\n                    </NavLink>\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/search\"\r\n                    >\r\n                        Search\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/login\"\r\n                    >\r\n                        Logout\r\n                    </NavLink>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { DcScreen } from '../components/dc/DcScreen';\r\nimport { HeroScreen } from '../components/heroes/HeroScreen';\r\nimport { MarvelScreen } from '../components/marvel/MarvelScreen';\r\nimport { SearchScreen } from '../components/search/SearchScreen';\r\nimport { Navbar } from '../components/ui/Navbar';\r\n\r\nexport const DashboardRouters = () => {\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"container mt-2\">\r\n                <Switch>\r\n                    <Route exact path=\"/marvel\" component={MarvelScreen} />\r\n                    <Route exact path=\"/hero/:heroeId\" component={HeroScreen} />\r\n                    <Route exact path=\"/dc\" component={DcScreen} />\r\n                    <Route exact path=\"/search\" component={SearchScreen} />\r\n                    <Redirect to=\"/marvel\" />\r\n                </Switch>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n  } from \"react-router-dom\";\r\nimport { LoginScreen } from '../components/login/LoginScreen';\r\nimport { DashboardRouters } from './DashboardRouters';\r\n\r\nexport const AppRouter = () => {\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <Route exact path=\"/login\" component={LoginScreen} />\r\n                    <Route path=\"/\" component={DashboardRouters} />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\nexport const HeroesApp = () => {\r\n    return (\r\n        <AppRouter />\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HeroesApp } from './HeroesApp';\r\n\r\nReactDOM.render(\r\n    <HeroesApp />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}